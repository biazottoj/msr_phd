{"url": "https://api.github.com/repos/apache/dubbo/issues/comments/604876234", "html_url": "https://github.com/apache/dubbo/issues/5922#issuecomment-604876234", "issue_url": "https://api.github.com/repos/apache/dubbo/issues/5922", "id": 604876234, "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDg3NjIzNA==", "user": {"login": "AlbumenJ", "id": 9292748, "node_id": "MDQ6VXNlcjkyOTI3NDg=", "avatar_url": "https://avatars.githubusercontent.com/u/9292748?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlbumenJ", "html_url": "https://github.com/AlbumenJ", "followers_url": "https://api.github.com/users/AlbumenJ/followers", "following_url": "https://api.github.com/users/AlbumenJ/following{/other_user}", "gists_url": "https://api.github.com/users/AlbumenJ/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlbumenJ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlbumenJ/subscriptions", "organizations_url": "https://api.github.com/users/AlbumenJ/orgs", "repos_url": "https://api.github.com/users/AlbumenJ/repos", "events_url": "https://api.github.com/users/AlbumenJ/events{/privacy}", "received_events_url": "https://api.github.com/users/AlbumenJ/received_events", "type": "User", "site_admin": false}, "created_at": "2020-03-27T08:24:44Z", "updated_at": "2020-03-27T08:24:44Z", "author_association": "MEMBER", "body": "Also, there are some hardcode in `AdaptiveClassCodeGenerator`, which need refactor too.\r\n\r\n```\r\n    /**\r\n     * generate extName assigment code\r\n     */\r\n    private String generateExtNameAssignment(String[] value, boolean hasInvocation) {\r\n        // TODO: refactor it\r\n        String getNameCode = null;\r\n        for (int i = value.length - 1; i >= 0; --i) {\r\n            if (i == value.length - 1) {\r\n                if (null != defaultExtName) {\r\n                    if (!\"protocol\".equals(value[i])) {\r\n                        if (hasInvocation) {\r\n                            getNameCode = String.format(\"url.getMethodParameter(methodName, \\\"%s\\\", \\\"%s\\\")\", value[i], defaultExtName);\r\n                        } else {\r\n                            getNameCode = String.format(\"url.getParameter(\\\"%s\\\", \\\"%s\\\")\", value[i], defaultExtName);\r\n                        }\r\n                    } else {\r\n                        getNameCode = String.format(\"( url.getProtocol() == null ? \\\"%s\\\" : url.getProtocol() )\", defaultExtName);\r\n                    }\r\n                } else {\r\n                    if (!\"protocol\".equals(value[i])) {\r\n                        if (hasInvocation) {\r\n                            getNameCode = String.format(\"url.getMethodParameter(methodName, \\\"%s\\\", \\\"%s\\\")\", value[i], defaultExtName);\r\n                        } else {\r\n                            getNameCode = String.format(\"url.getParameter(\\\"%s\\\")\", value[i]);\r\n                        }\r\n                    } else {\r\n                        getNameCode = \"url.getProtocol()\";\r\n                    }\r\n                }\r\n            } else {\r\n                if (!\"protocol\".equals(value[i])) {\r\n                    if (hasInvocation) {\r\n                        getNameCode = String.format(\"url.getMethodParameter(methodName, \\\"%s\\\", \\\"%s\\\")\", value[i], defaultExtName);\r\n                    } else {\r\n                        getNameCode = String.format(\"url.getParameter(\\\"%s\\\", %s)\", value[i], getNameCode);\r\n                    }\r\n                } else {\r\n                    getNameCode = String.format(\"url.getProtocol() == null ? (%s) : url.getProtocol()\", getNameCode);\r\n                }\r\n            }\r\n        }\r\n\r\n        return String.format(CODE_EXT_NAME_ASSIGNMENT, getNameCode);\r\n    }\r\n```", "reactions": {"url": "https://api.github.com/repos/apache/dubbo/issues/comments/604876234/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "performed_via_github_app": null, "key_in_comment": false}